Lesson 3 Reflections
===============================================
Reflect: Using a remote repository

Question:
  When would you want to use a remote repository rather than keeping all your work local?
  
Answer:
  I'd create a remote repository when there will be multiple people/groups working on a single project, so everyone can access the files immediatedly.

-----------------------------------------------

Relfect: Manual vs. Automatic Pull

	Question:
		Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

	Answer: 
		Updating repositories manually is the only way to ensure the information in the files is accurate. An automatic update could possibly update mid-code and potentially cause a catastrophic failure.

------------------------------------------------

Reflect: Forks, Clones, and Branches

	Question: 
		Describe the differences between forks, clones, and branches. When would you use one instead of another?

	Answer: 
		Forks are repositories from other GitHub members, that other users have cloned to their GitHub account... which also gives credit to the original author.
		Clones are copies of repositories, but have no link back to the original author on GitHub.
		Branches are just part of the repositories, which stray from the core code and can possibly merge back to the main branch.

------------------------------------------------

Reflect: Local Copies of Remote Branches

	Question:
		What is the benefit of having a copy of the last known state of the remote stored locally?

	Answer:
		It would allow you to have the most recent version to work on, especially if you were to be going somewhere without internet access.

------------------------------------------------

Reflect: Collaboration using Git and GitHub

	Question:
		How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

	Answer:
		Previously I've used e-mail, vpn's, and/or ftp servers. These allowed access, but in order to ensure changes were correct, I usually had to follow up with a call or e-mail to talk about what has changed, which was time consuming.

		It was easy for the most part, but extremely time consuming.

-------------------------------------------------

Reflect: When to use a separate branch

	Question:
		When would you want to make changes in a separate branch rather than directly in master?
		What benefits does each approach have?

	Answer: 
		Any time you are going to be adding a new feature or possibly a variation of the master branch.

		Making a separate branch allows you to make drastic changes to the code, which would possibly ruin the main branch if added directly.